% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plotDimRed.R
\name{plotDimRed}
\alias{plotDimRed}
\title{plotDimRed}
\usage{
plotDimRed(
  spe,
  type = c("UMAP", "PCA"),
  x_axis = NULL,
  y_axis = NULL,
  annotate = NULL,
  palette = "libd_layer_colors",
  size = 0.3
)
}
\arguments{
\item{spe}{(SpatialExperiment) Input data, assumed to be a
\code{SpatialExperiment} object.}

\item{type}{(character) Type of reduced dimension plot. Options are "UMAP" or
"PCA". Default = "UMAP".}

\item{x_axis}{(character) Name of column in \code{reducedDim} containing
x-coordinates. Default = "UMAP1" or "PC1", depending on plot type.}

\item{y_axis}{(character) Name of column in \code{reducedDim} containing
y-coordinates. Default = "UMAP2" or "PC2", depending on plot type.}

\item{annotate}{(character) Name of column in \code{colData} containing
values to annotate spots with colors, e.g. cluster labels (discrete values)
or total UMI counts (continuous values). For discrete values such as
cluster labels, the column in \code{colData} should be formatted as a
factor.}

\item{palette}{(character) Color palette for annotation. Options for discrete
labels are "libd_layer_colors", "Okabe-Ito", or a vector of color names or
hex values. For continuous values, provide a vector of length 2 for the low
and high range, e.g. \code{c("gray90", "navy")}. Default =
\code{"libd_layer_colors"}.}

\item{size}{(numeric) Point size for \code{geom_point()}. Default = 0.3.}
}
\value{
Returns a ggplot object. Additional plot elements can be added as
  ggplot elements (e.g. title, labels, formatting, etc).
}
\description{
Plotting functions for spatially resolved transcriptomics data.
}
\details{
Function to plot spot-based spatially resolved transcriptomics data stored in
a \code{SpatialExperiment} object.

This function generates a plot in reduced dimension coordinates (PCA or
UMAP), along with annotation such as cluster labels or total UMI counts.
}
\examples{
library(STexampleData)
spe <- Visium_humanDLPFC()
# add random data in reducedDims
dat <- matrix(ncol = 2, runif(ncol(spe) * 2))
colnames(dat) <- paste0("PC", 1:2)
reducedDims(spe, type = "PCA") <- list(PCA = dat)
plotDimRed(spe, type = "PCA")

}
