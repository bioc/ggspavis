% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plotSpots.R
\name{plotSpots}
\alias{plotSpots}
\title{plotSpots}
\usage{
plotSpots(
  spe,
  x_coord = "x",
  y_coord = "y",
  discrete = NULL,
  continuous = NULL,
  palette = NULL,
  flip_xy_Visium = FALSE
)
}
\arguments{
\item{spe}{(SpatialExperiment) Input data object.}

\item{x_coord}{(character) Name of column in spatialData containing
x-coordinates. Default = "x".}

\item{y_coord}{(character) Name of column in spatialData containing
y-coordinates. Default = "y".}

\item{discrete}{(character) Name of column in colData containing discrete
labels (e.g. cluster labels or ground truth labels) to show with colors.
Default = NULL.}

\item{continuous}{(character) Name of column in colData containing continuous
values (e.g. total UMI counts) to show with colors. Default = NULL.}

\item{palette}{(character) Color palette. Options for discrete labels are
"libd_layer_colors", "Okabe-Ito", or a vector of hex codes for a custom
palette. Default = "libd_layer_colors". Options for continuous values are
"navy", or a vector of length two containing custom colors. Default =
"navy".}

\item{flip_xy_Visium}{(logical) Whether to switch x and y coordinates and
reverse y coordinates (sometimes required for 10x Visium platform if using
the default `pxl_row_in_fullres` and `pxl_col_in_fullres` columns as
coordinates). Default = FALSE.}
}
\value{
Returns a ggplot object. Additional plot elements can be added as
  ggplot elements (e.g. title, customized formatting, etc).
}
\description{
Plots for spatially resolved transcriptomics datasets
}
\details{
Function to plot spot-based spatially resolved transcriptomics data in
spatial (x-y) coordinates.

This function generates a plot showing spatial coordinates (spots) in the x-y
coordinates of the tissue slide, with optional colors for cluster labels,
ground truth labels, or other quantities.
}
\examples{
# library(ggspavis)
# library(STdata)
# spe <- load_data("Visium_humanDLPFC")
# plotSpots(spe, discrete = "ground_truth", palette = "libd_layer_colors")

}
